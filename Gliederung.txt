Abstract
"In this paper the concept of "Scale-Invariant Feature Transform" as proposed in 2004 by David G. Lowe is explained...
It is an algorithmn that extracts distinctive features on different scales from an image, which in turn are used for further computations!? such as image matching or object detection 

1. Introduction
    1.1 milestone at that time / groundwork for other real-time object detection procedures such as SURF (Speedup ... references) 
    1.2 Basic Concept
2. Ausarbeitung
    2.1 Motivation and Usage (mÃ¶gliche Wiederholungen aus Abstract and 1.1) 
        (Schlussfolgerung)?? "It seems that Lowe initially developed SIFT for the use of object recognition since he dedicates a fair amount of his paper on how to acomplish this task using SIFT-Features. However they can also be used for all kinds of tasks relevant in numerus computer vision applications. The fact?! that these descriptors are invariant to scale and rotation and quite robust to settle changes in illumination, noise, partial occlusion and distortion makes them a good fit for object tracking in videos or stiching single images together into a panoramic image (references!!)"
    2.2 feature selection (more invariance --> more robust/stable)
    2.3 keypoint detection from scale-space extrema
        "...
        Subtracting 2 different strongly smoothed variants of the same image and only considering keypoints that  garantiees that roughly the same features will be extracted from an object not matter how large it is depicted in an image. Therfore these features (represented by each keypoint) are considered to be invariant to scale"

    2.4 keypoint refinement

    2.5 keypoint filtering
    2.6 orientation assignment
        - most dominant gradient 
    2.7 construction of descriptors 
3. Ergebnisse
    - The SIFT-feature invariance and robustness to many 'image properties'?! ensure that many corresponding features of the same object can be found in different images even under .. conditions
    "However this procedure is not perfect. repetitive structures... detecting outliers is essential for further processing 
    Furthermore its lack of speed --> SURF
4. Schlussfolgerung


